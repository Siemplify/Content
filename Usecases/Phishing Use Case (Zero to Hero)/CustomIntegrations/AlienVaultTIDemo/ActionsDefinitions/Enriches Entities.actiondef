{
  "Name": "Enriches Entities",
  "Description": "Enrich external IPs, hosts, URLs, and hashes with information from AlienVault Threat Intelligence (TI)",
  "Script": "from SiemplifyUtils import output_handler\n# Imports\nfrom SiemplifyDataModel import EntityTypes\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import dict_to_flat, flat_dict_to_csv, add_prefix_to_dict_keys, convert_dict_to_json_result_dict\nfrom AlienVaultTIManager import AlienVaultTIManager\nimport json\n\n# Consts\nADDRESS = EntityTypes.ADDRESS\nFILEHASH = EntityTypes.FILEHASH\nURL = EntityTypes.URL\nHOSTNAME = EntityTypes.HOSTNAME\n\n\n# Enrich target entity with alienvault info and add csv table to entity\ndef enrich_entity(report, entity, siemplify):\n    country = report.get('geo').get('country_code') if report.get('geo') else None\n    flat_report = dict_to_flat(report)\n    csv_output = flat_dict_to_csv(flat_report)\n    flat_report = add_prefix_to_dict_keys(flat_report, \"AlienVault\")\n    siemplify.result.add_entity_table(entity.identifier, csv_output)\n    entity.additional_properties.update(flat_report)\n    entity.additional_properties['Country'] = country\n    entity.is_enriched = True\n    return True\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    entities_to_enrich = []\n    not_found_entities = []\n    json_result = {}\n\n    # Configuration.\n    #conf = siemplify.get_configuration('AlienVaultTI')\n    #api_key = conf['Api Key']\n    api_key = \"4ec3af1186c8c80e033899a9912a36d4e9838e80dfba63c1000a70edb202ccba\"\n    alienvault = AlienVaultTIManager(api_key)\n\n    for entity in siemplify.target_entities:\n        if entity.entity_type == ADDRESS and not entity.is_internal:\n            ip_info = alienvault.enrich_ip(entity.identifier)\n            if ip_info:\n                json_result[entity.identifier] = ip_info\n                csv_output = enrich_entity(ip_info, entity, siemplify)\n                entities_to_enrich.append(entity)\n            else: \n                not_found_entities.append(entity)\n\n        if entity.entity_type == FILEHASH:\n            hash_info = alienvault.enrich_hash(entity.identifier)\n            if hash_info:\n                json_result[entity.identifier] = hash_info\n                csv_output = enrich_entity(hash_info, entity, siemplify)\n                entities_to_enrich.append(entity)\n            else: \n                not_found_entities.append(entity)\n\n        if entity.entity_type == URL:\n            url_info = alienvault.enrich_url(entity.identifier)\n            if url_info:\n                json_result[entity.identifier] = url_info\n                csv_output = enrich_entity(url_info, entity, siemplify)\n                entities_to_enrich.append(entity)\n            else: \n                not_found_entities.append(entity)\n\n        if entity.entity_type == HOSTNAME and not entity.is_internal:\n            host_info = alienvault.enrich_host(entity.identifier)\n            if host_info:\n                json_result[entity.identifier] = host_info\n                csv_output = enrich_entity(host_info, entity, siemplify)\n                entities_to_enrich.append(entity)\n            else: \n                not_found_entities.append(entity)\n\n    if entities_to_enrich:\n        output_message = \"Following entities were enriched by AlienVault. \\n{0}\".format(entities_to_enrich)\n        if not_found_entities:\n            output_message = \"{0} \\n\\nCould not find results for the following entities \\n{1}\".format(output_message,\n                                                                                                      not_found_entities)\n\n        siemplify.update_entities(entities_to_enrich)\n        result_value = True\n    else:\n        output_message = 'No entities were enriched.'\n        result_value = False\n\n    siemplify.result.add_result_json(convert_dict_to_json_result_dict(json_result))\n\n    siemplify.end(output_message, result_value)\n\n\nif __name__ == '__main__':\n    main()\n",
  "IntegrationIdentifier": "AlienVaultTIDemo",
  "ScriptResultName": "is_enriched",
  "DynamicResultsMetadata": [
    {
      "ResultName": "JsonResult",
      "ResultExample": "[{\"EntityResult\": {\" analysis \": {\" analysis \": {\" hash \": \" 555a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd55 \", \" info \": {\" results \": {\" file_class \": \" None \", \" file_type \": \" ASCII text, with no line terminators \", \" md5 \": \" 55d88612fea8a8f36de82e1278abb02f \", \" sha1 \": \" 1235856ce81f2b7382dee72602f798b642f14123 \", \" ssdeep \": \" \", \" filesize \": \" 68 \", \" sha256 \": \" 37dhr21bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf65hdgsu \"}}, \" _id \": \" 52b1200214ad667e85105707 \", \" metadata \": {\" tlp \": \" WHITE \"}, \" datetime_int \": \" 2013 - 12 - 18T04: 09: 37 \", \" plugins \": {\" exiftool \": {\" process_time \": \" 0.083348989486694336 \", \" results \": {\" Error \": \" Unknown file type \"}}, \" avg \": {\" process_time \": \" 0.92721199989318848 \", \" results \": {\" detection \": \" EICAR_Test \", \" alerts \": [\" Malware infection \"]}}, \" clamav \": {\" process_time \": \" 0.00052618980407714844 \", \" results \": {\" detection \": \" Eicar - Test - Signature \", \" alerts \": [\" Malware detected \"]}}}}, \" malware \": {}, \" page_type \": \" None \"}, \" general \": {\" type_title \": \" FileHash - SHA256 \", \"sections\": [\"general\", \"analysis\"], \" indicator \": \" 555a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd55 \", \" base_indicator \": {\" title \": \" \", \" access_type \": \" public \", \" description \": \" \", \" content \": \" \", \" indicator \": \" 275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f \", \" access_reason \": \" \", \" type \": \" FileHash - SHA256 \", \" id \": 22822}, \"type\": \"sha256\", \" pulse_info \": {\" count \": 11, \"pulses\": [{\"pulse_source\": \"api\", \"references\": [\"https://metadefender.opswat.com/threat-intelligence-feeds\"], \"subscriber_count\": 568, \"modified_text\": \"95 days ago \", \"is_subscribing\": \"None\", \"votes_count\": 0, \"vote\": 0, \"id\": \"5bbf59f5d47a1b46ca035bde\", \"industries\": [], \"author\": {\"username\": \"Metadefender\", \"is_subscribed\": 0, \"avatar_url\": \"https://otx20-web-media.s3.amazonaws.com/media/avatars/user_32153/resized/80/avatar_f7b6037c8a.png\", \"is_following\": 0, \"id\": \"32153\"}, \"cloned_from\": \"None\", \"comment_count\": 0, \"follower_count\": 0, \"public\": 1, \"indicator_type_counts\": {\"FileHash-SHA1\": 1000, \"FileHash-MD5\": 1000, \"FileHash-SHA256\": 1000}, \"TLP\": \"green\", \"description\": \"Production malware has shown the following behaviors: injector,trojan,adware,sms,backdoor\", \"tags\": [\"html\", \"win32\", \"js\"], \"in_group\": \"False\", \"is_modified\": \"False\", \"upvotes_count\": 0, \"targeted_countries\": [], \"groups\": [], \"validator_count\": 0, \"threat_hunter_scannable\": \"True\", \"is_author\": \"False\", \"adversary\": \"\", \"name\": \"Production malware on Metadefender.com\", \"locked\": 0, \"observation\": {\"pulse_source\": \"api\", \"references\": [\"https://metadefender.opswat.com/threat-intelligence-feeds\"], \"subscriber_count\": 2, \"is_subscribed\": 0, \"author_name\": \"Metadefender\", \"is_subscribing\": \"None\", \"is_following\": 0, \"vote\": 0, \"id\": \"5bbf59f5d47a1b46ca035bde\", \"industries\": [], \"cloned_from\": \"None\", \"comment_count\": 0, \"avatar_url\": \"https://otx20-web-media.s3.amazonaws.com/media/avatars/user_32153/resized/80/avatar_f7b6037c8a.png\", \"follower_count\": 0, \"public\": 1, \"revision\": 1, \"indicator_type_counts\": {\"FileHash-SHA1\": 1000, \"FileHash-MD5\": 1000, \"FileHash-SHA256\": 1000}, \"description\": \"Production malware has shown the following behaviors: injector,trojan,adware,sms,backdoor \", \"tags\": [\"html\", \"win32\", \"js\"], \"upvotes_count\": 0, \"targeted_countries\": [], \"groups\": [], \"validator_count\": 0, \"adversary\": \"\", \"tlp\": \"green\", \"locked\": 0, \"name\": \"Production malware on Metadefender.com\", \"created\": \"2018-10-11T14:11:01.432000\", \"downvotes_count\": 0, \"modified\": \"2018-10-11T14:11:01.432000\", \"export_count\": 3, \"extract_source\": [], \"votes_count\": 0, \"author_id\": 32153, \"user_subscriber_count\": 566}, \"created\": \"2018-10-11T14:11:01.432000\", \"downvotes_count\": 0, \"modified\": \"2018-10-11T14:11:01.432000\", \"export_count\": 3, \"indicator_count\": 3000, \"is_following\": 0}], \" references \": [\" https: //metadefender.opswat.com/results?utm_medium=reference&amp\"]}}}, \"Entity\": \"123a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fasd \"}]",
      "ShowResult": true
    }
  ],
  "Creator": "admin",
  "IsEnabled": true,
  "IsCustom": true,
  "IsSystem": false,
  "Version": 2.0,
  "TimeoutSeconds": 600,
  "Parameters": [],
  "DefaultResultValue": null,
  "PythonVersion": "None",
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1577893930456,
  "ModificationTimeUnixTimeInMs": 1577893930456
}